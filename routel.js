const{existsSync:existsSync,readFileSync:readFileSync}=require("fs");routes=[],fourohfour="Page not found :(",engine=((...e)=>e[2]("No templating engine found :(")),views="./views/",ext="";const contentType=e=>({"Content-Type":e?"application/json":"text/html"}),getPath=e=>e.split(/[?#]/)[0],params=(e,t,s={},n=0)=>{const r=e[n];return r?params(e,t,Object.assign(s,{[r[0]]:t.split("/")[r[1]]}),n+1):s},gettype=(e,t)=>typeof e==t,server=require("http").createServer((e,t)=>{let s;t.send=(e=>{e+="",t.writeHead(s,contentType(gettype(e,"object"))),t.write(gettype(e,"object")?JSON.stringify(e):e),t.end()}),t.status=(e=>(s=e,t)),t.render=((e,s={})=>{engine(views+e+"."+ext,s,(e,s)=>e?t.status(500).send(e):t.send(s))}),t.redirect=((...e)=>(t.status(2==e.length?e[1]:301),t.setHeader("Location",e.slice(-1)[0]),console.log(e.slice(-1)[0]),t.end())),e.query=Object.assign({},require("url").parse(e.url,!0).query);const n=async r=>{const o=()=>n(r+1),i=routes[r];if(!i)return void t.status(404).send(gettype(fourohfour,"function")?fourohfour(e,t):fourohfour);let a;if(!i[0].some((t,s)=>!!t[0].exec(getPath(e.url))&&(a=s,!0))||i[1]&&i[1]!=e.method[0])n(r+1);else{const n=i[2];s=i[3],e.params=params(i[0][a][1],getPath(e.url));const r=gettype(n,"function")?await n(e,t,o):n;if(!r)return;t.send(r)}};n(0)}),paramReg=/:.*?(?=\/|$)/g,urlParse=e=>e.constructor!=RegExp?[e].flat().map(e=>[new RegExp(`^${e.replace("*",".*?").replace(paramReg,"[^/ ]+?").replace(/\//g,"\\$&")}/?$`),(e.match(paramReg)||[]).filter(Boolean).map(t=>[t.slice(1),e.slice(0,e.indexOf(t)).split("/").length-1])]):[[e,[]]],put=(e,t,s,n=200)=>routes.push([urlParse(e),s,t,n]),use=(e,t)=>put("*",e,"",t),listen=(e=8080,t="")=>{server.listen(e),gettype(t,"string")?t?console.log(t):console.log(`Listening on port ${e}!`):t()},bodyparse=(e,t,s)=>new Promise(t=>{let n="";e.on("data",function(e){n+=e}),e.on("end",function(){e.rawBody=n;try{e.body=JSON.parse(n)}catch{try{e.body=Object.assign({},require("querystring").parse(n))}catch{}}s(),t()})}),staticc=(e="public",t="index.html")=>(s,n,r)=>{"POST"==s.method&&r();const o=e+getPath(s.url).replace(/^\/$/,"/"+t);return console.log(o),existsSync(o)?readFileSync(o,{encoding:"utf8",flag:"r"}):r()};module.exports={get:(...e)=>put(...e.slice(0,2),"G",e[2]),post:(...e)=>put(...e.slice(0,2),"P",e[2]),listen:listen,use:use,json:bodyparse,static:staticc,useMultiple:(...e)=>e.forEach(e=>use(e)),fof:e=>fourohfour=e,engine:(e,t)=>[ext,engine]=[e,t],set:(e,t)=>{"view engine"==(e=e.toLowerCase())?[ext,engine]=[t,require(t).__express]:"views"==e&&(views=t+"/")}};